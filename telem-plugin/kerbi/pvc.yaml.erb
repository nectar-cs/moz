<% pvc = values[:pvc] || {} %>
<% annotations = pvc[:annotations] %>
<% storage_class = pvc[:storageClassName] %>
<% finalizers = pvc[:finalizers] || [] %>

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  namespace: <%= release_name %>
  name: <%= name %>-pvc
  <% if annotations.present?  %>
  annotations: <% annotations.each do |key, value| %>
    <%= "#{key}: #{value}" %>
  <% end %>
  <% end %>
  labels:
    managed_by: <%= org %>
    app: <%= name %>
  finalizers:
      <% if finalizers.any? %>
      <% finalizers.each do |finalizer| %>
    - <%= finalizer %>
        <% end %>
        <% else %>
        []
    <% end %>
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: <%= pvc[:size] %>
    <% if storage_class.present? %>
  storageClassName: <%= storage_class %>
    <% end %>

---

#    <%# pvc = values.dig(:backups, :pvc) || {} %>
#    <%# annotations = (pvc[:annotations] || {}).to_yaml %>
#    <%# storage_class = pvc.dig(:storageClassName) %>
#    <%# finalizers = pvc[:finalizers] || [] %>

#    <%# if values.dig(:backups, :enabled) %>
#kind: PersistentVolumeClaim
#apiVersion: v1
#metadata:
#  namespace: <%#= release_name %>
#  name: <%#= name %>-backups-pvc
#  #  annotations: <%#= annotations.to_yaml %>
#  labels:
#    managed_by: <%#= org %>
#    app: <%#= name %>
#  finalizers: []
#  finalizers:
#      <%# finalizers.each do |finalizer| %>
#    - <%#= finalizer %>
#    <%# end %>
#spec:
#  accessModes:
#    - ReadWriteOnce
#  resources:
#    requests:
#      storage: 1Gi
#    <%# if storage_class.present? %>
#  storageClassName: <%#= storage_class %>
#    <%# end %>
#    <%# end %>