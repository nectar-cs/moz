kind: ActionErrorRemediationOption
id: action-error-remediator.delete-lingering-ingress
title: Delete Ingress Resource
info: "If your intention was to have Ingress disabled, you can keep
the variable set to 'false' and just delete the lingering Ingress resource."
match:
  type: negative_predicate
  name: predicate.ingress_enabled_resource_in_sync
button_action:
  type: action
  uri:
    kind: DeleteResourcesAction
    title: Delete Lingering ingress/nmachine-ingress
    selectors:
      - kind: ResourceSelector
        res_kind: Ingress
        name: nmachine-ingress

---

kind: ActionErrorRemediationOption
id: action-error-remediator.set-ingress-true
title: "Set ingress.enabled to true"
info: "If your intention is to have ingress enabled and your
chart variable was simply out of sync, all that is needed is to
set the variable to 'true' and run kubectl apply for good measure."
match:
  type: negative_predicate
  name: predicate.ingress_enabled_resource_in_sync
button_action:
  type: action
  uri:
    kind: Action
    inherit: sdk.action.safely_apply_application_manifest_e2e_action
    title: Set 'ingress.enabled' to 'true' and apply manifest
    values: {"ingress.enabled": true}

---

kind: ActionErrorRemediationOption
id: action-error-remediator.make-cluster-ip
title: Convert Service to a ClusterIP
info: "If your intention is to serve public traffic to the publisher
frontend via the ingress (routed through a domain, which is recommended),
the best option is to make the service a normal service. This entails
first deleting it, and then recreating it with type ClusterIP."
match:
  type: negative_predicate
  name: predicate.publisher_frontend.redundant_exposure
button_action:
  type: action
  uri:
    kind: MultiAction
    title: "Convert Service to a ClusterIP"
    info:  "Disable the existing service, update variable, run kubectl apply."
    inherit: sdk.action.step_apply_application_manifest_e2e_action
    values: {"publisher_frontend.service_type": ClusterIP}
    new__sub_actions:
      - kind: DeleteResourcesAction
        selectors:
          - res_kind: Service
            name: publisher_frontend
      - ...get::self>>old__sub_actions


---

kind: ActionErrorRemediationOption
id: action-error-remediator.make-cluster-ip
title: Disable Ingress
info: "If your intention is to serve public traffic to the publisher
frontend directly using the NodePort or LoadBalancer, the ingress (not recommended),
you should delete the ingress. This will disable ingress for all services."
match:
  type: negative_predicate
  name: predicate.publisher_frontend.redundant_exposure
button_action:
  type: action
  uri:
    kind: MultiAction
    inherit: sdk.action.step_apply_application_manifest_e2e_action
    values:
      "ingress.enabled": false
    new__sub_actions:
      - kind: DeleteResourcesAction
        selectors:
          - res_kind: Ingress
            name: nmachine-ingress
      - ...get::self>>old__sub_actions
